import { components } from './schema';

/**
 * Types from the API, re-exported from the types generated by `openapi-typescript`.
 */

// Images
export type ImageDTO = components['schemas']['ImageDTO'];
export type BoardDTO = components['schemas']['BoardDTO'];
export type BoardChanges = components['schemas']['BoardChanges'];
export type ImageChanges = components['schemas']['ImageRecordChanges'];
export type ImageCategory = components['schemas']['ImageCategory'];
export type ResourceOrigin = components['schemas']['ResourceOrigin'];
export type ImageField = components['schemas']['ImageField'];
export type OffsetPaginatedResults_BoardDTO_ =
  components['schemas']['OffsetPaginatedResults_BoardDTO_'];
export type OffsetPaginatedResults_ImageDTO_ =
  components['schemas']['OffsetPaginatedResults_ImageDTO_'];

// Models
export type ModelType = components['schemas']['ModelType'];
export type BaseModelType = components['schemas']['BaseModelType'];
export type PipelineModelField = components['schemas']['PipelineModelField'];
export type ModelsList = components['schemas']['ModelsList'];

// Graphs
export type Graph = components['schemas']['Graph'];
export type Edge = components['schemas']['Edge'];
export type GraphExecutionState = components['schemas']['GraphExecutionState'];

// General nodes
export type CollectInvocation = components['schemas']['CollectInvocation'];
export type IterateInvocation = components['schemas']['IterateInvocation'];
export type RangeInvocation = components['schemas']['RangeInvocation'];
export type RandomRangeInvocation =
  components['schemas']['RandomRangeInvocation'];
export type RangeOfSizeInvocation =
  components['schemas']['RangeOfSizeInvocation'];
export type InpaintInvocation = components['schemas']['InpaintInvocation'];
export type ImageResizeInvocation =
  components['schemas']['ImageResizeInvocation'];
export type RandomIntInvocation = components['schemas']['RandomIntInvocation'];
export type CompelInvocation = components['schemas']['CompelInvocation'];

// ControlNet Nodes
export type CannyImageProcessorInvocation =
  components['schemas']['CannyImageProcessorInvocation'];
export type ContentShuffleImageProcessorInvocation =
  components['schemas']['ContentShuffleImageProcessorInvocation'];
export type HedImageProcessorInvocation =
  components['schemas']['HedImageProcessorInvocation'];
export type LineartAnimeImageProcessorInvocation =
  components['schemas']['LineartAnimeImageProcessorInvocation'];
export type LineartImageProcessorInvocation =
  components['schemas']['LineartImageProcessorInvocation'];
export type MediapipeFaceProcessorInvocation =
  components['schemas']['MediapipeFaceProcessorInvocation'];
export type MidasDepthImageProcessorInvocation =
  components['schemas']['MidasDepthImageProcessorInvocation'];
export type MlsdImageProcessorInvocation =
  components['schemas']['MlsdImageProcessorInvocation'];
export type NormalbaeImageProcessorInvocation =
  components['schemas']['NormalbaeImageProcessorInvocation'];
export type OpenposeImageProcessorInvocation =
  components['schemas']['OpenposeImageProcessorInvocation'];
export type PidiImageProcessorInvocation =
  components['schemas']['PidiImageProcessorInvocation'];
export type ZoeDepthImageProcessorInvocation =
  components['schemas']['ZoeDepthImageProcessorInvocation'];

// Node Outputs
export type ImageOutput = components['schemas']['ImageOutput'];
export type MaskOutput = components['schemas']['MaskOutput'];
export type PromptOutput = components['schemas']['PromptOutput'];
export type IterateInvocationOutput =
  components['schemas']['IterateInvocationOutput'];
export type CollectInvocationOutput =
  components['schemas']['CollectInvocationOutput'];
export type LatentsOutput = components['schemas']['LatentsOutput'];
export type GraphInvocationOutput =
  components['schemas']['GraphInvocationOutput'];
